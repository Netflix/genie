apply plugin: "org.asciidoctor.convert"

project.parent.tasks.collectDocumentation.dependsOn project.tasks.asciidoctor

// This is needed cause some things like attributes for asciidoctor don't serialize project.version properly at runtime
def genieVersion = project.version.toString()

asciidoctor {
    inputs.dir new File(project.projectDir, "/src/docs/asciidoc")
    attributes "revnumber": genieVersion
}

def dockerDir = new File(project.projectDir, "/src/main/docker")

task demoStart(type: Exec, group: "Demo", description: "Bring up the Genie demo containers") {
    workingDir dockerDir
    environment("GENIE_VERSION", project.version)
    commandLine "docker-compose", "up", "-d"
}

task demoInit(type: Exec, group: "Demo", description: "Setup the configuration metadata in Genie") {
    commandLine "docker", "exec", "docker_genie-client_1", "./init_demo.py"
}

task demoRunProdHadoopJob(type: Exec, group: "Demo", description: "Run demo Hadoop job on production cluster") {
    commandLine "docker", "exec", "docker_genie-client_1", "./run_hadoop_job.py", "sla"
}

task demoRunTestHadoopJob(type: Exec, group: "Demo", description: "Run demo Hadoop job on test cluster") {
    commandLine "docker", "exec", "docker_genie-client_1", "./run_hadoop_job.py", "test"
}

task demoRunProdHDFSJob(type: Exec, group: "Demo", description: "Run demo HDFS job on production cluster") {
    commandLine "docker", "exec", "docker_genie-client_1", "./run_hdfs_job.py", "sla"
}

task demoRunTestHDFSJob(type: Exec, group: "Demo", description: "Run demo HDFS job on test cluster") {
    commandLine "docker", "exec", "docker_genie-client_1", "./run_hdfs_job.py", "test"
}

task demoRunProdYarnJob(type: Exec, group: "Demo", description: "Run demo YARN job on production cluster") {
    commandLine "docker", "exec", "docker_genie-client_1", "./run_yarn_job.py", "sla"
}

task demoRunTestYarnJob(type: Exec, group: "Demo", description: "Run demo YARN job on test cluster") {
    commandLine "docker", "exec", "docker_genie-client_1", "./run_yarn_job.py", "test"
}

task demoRunProdSparkShellJob(type: Exec, group: "Demo", description: "Run demo Spark Shell job on production cluster") {
    commandLine "docker", "exec", "docker_genie-client_1", "./run_spark_shell_job.py", "sla"
}

task demoRunTestSparkShellJob(type: Exec, group: "Demo", description: "Run demo Spark Shell job on test cluster") {
    commandLine "docker", "exec", "docker_genie-client_1", "./run_spark_shell_job.py", "test"
}

task demoRunProdSparkSubmitJob(type: Exec, group: "Demo", description: "Run demo Spark Submit job on production cluster") {
    commandLine "docker", "exec", "docker_genie-client_1", "./run_spark_submit_job.py", "sla"
}

task demoRunTestSparkSubmitJob(type: Exec, group: "Demo", description: "Run demo Spark Submit job on test cluster") {
    commandLine "docker", "exec", "docker_genie-client_1", "./run_spark_submit_job.py", "test"
}

task demoRunProdSpark2SubmitJob(type: Exec, group: "Demo", description: "Run demo Spark 2.x Submit job on production cluster") {
    commandLine "docker", "exec", "docker_genie-client_1", "./run_spark_submit_job.py", "sla", "2.0.1"
}

task demoRunTestSpark2SubmitJob(type: Exec, group: "Demo", description: "Run demo Spark 2.x Submit job on test cluster") {
    commandLine "docker", "exec", "docker_genie-client_1", "./run_spark_submit_job.py", "test", "2.0.1"
}

task demoMakeTestProd(type: Exec, group: "Demo", description: "Move production tags from prod to test cluster") {
    commandLine "docker", "exec", "docker_genie-client_1", "./move_tags.py"
}

task demoResetProd(type: Exec, group: "Demo", description: "Move production tags back to production cluster") {
    commandLine "docker", "exec", "docker_genie-client_1", "./reset_tags.py"
}

task demoStop(type: Exec, group: "Demo", description: "Bring down the  Genie demo") {
    workingDir dockerDir
    environment("GENIE_VERSION", project.version)
    commandLine "docker-compose", "down"
}
