##
#
#  Copyright 2013 Netflix, Inc.
#
#     Licensed under the Apache License, Version 2.0 (the "License");
#     you may not use this file except in compliance with the License.
#     You may obtain a copy of the License at
#
#         http://www.apache.org/licenses/LICENSE-2.0
#
#     Unless required by applicable law or agreed to in writing, software
#     distributed under the License is distributed on an "AS IS" BASIS,
#     WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
#     See the License for the specific language governing permissions and
#     limitations under the License.
#
##

## Application info
netflix.appinfo.name=genie
# change this if your container is running on a different port
netflix.appinfo.port=7001

## Karyon settings
# You must provide any specific packages that must be scanned for karyon for finding Application and Component classes.
# By default karyon only searches com.netflix package
# The package specified here is the root package, any subpackages under the root will also be scanned.
com.netflix.karyon.server.base.packages=com.netflix.genie.server.startup

# The health check handler for this application.
com.netflix.karyon.health.check.handler.classname=com.netflix.genie.server.health.HealthCheck

# Comment this property if you want to enable eureka integration, and set up eureka-client.properties
com.netflix.karyon.eureka.disable=true

## Implementation of the execution service resource
netflix.genie.server.executionServiceImpl=com.netflix.genie.server.services.impl.GenieExecutionServiceImpl

## Implementation of the configuration service resources
netflix.genie.server.clusterConfigImpl=com.netflix.genie.server.services.impl.PersistentClusterConfigImpl
netflix.genie.server.hiveConfigImpl=com.netflix.genie.server.services.impl.PersistentHiveConfigImpl
netflix.genie.server.pigConfigImpl=com.netflix.genie.server.services.impl.PersistentPigConfigImpl

## Cluster load balancer settings
netflix.genie.server.clusterLoadBalancerImpl=com.netflix.genie.server.services.impl.RandomizedClusterLoadBalancerImpl

## Execution Service system properties

# java home
netflix.genie.server.java.home=/etc/alternatives/jre

# hadoop home for various versions
netflix.genie.server.hadoop.home=/apps/hadoop/current
netflix.genie.server.hadoop.1.0.home=/apps/hadoop/1.0
netflix.genie.server.hadoop.1.0.3.home=/apps/hadoop/1.0

# hive home for various versions
netflix.genie.server.hive.home=/apps/hive/current
netflix.genie.server.hive.0.8.home=/apps/hive/0.8
netflix.genie.server.hive.0.8.1.home=/apps/hive/0.8

# pig home for various versions
netflix.genie.server.pig.home=/apps/pig/current
netflix.genie.server.pig.0.9.home=/apps/pig/0.9
netflix.genie.server.pig.0.9.2.home=/apps/pig/0.9
netflix.genie.server.pig.0.11.home=/apps/pig/0.11
netflix.genie.server.pig.0.11.2.home=/apps/pig/0.11

# REST URI for the execution service
netflix.genie.server.job.resource.prefix=genie/v0/jobs

# If this is commented, Genie will use InetAddress.getLocalHost() in DC,
# or the environment variable EC2_PUBLIC_HOSTNAME in the cloud
# netflix.genie.server.host=localhost

# Location of genie scripts - currently part of genie-web/conf/system/apps/genie/bin
# Change this appropriately to point to above location
netflix.genie.server.sys.home=/apps/genie/bin

# The relative path for the prefix directory inside Tomcat's "webapps/ROOT" 
# that Genie will use for its working directory
# This is usually sym-linked to netflix.genie.server.user.working.dir
netflix.genie.server.job.dir.prefix=genie-jobs

# Actual location where output directories are created
# Create a symlink from the above directory to here
# Or simply provide the full path of the above directory
netflix.genie.server.user.working.dir=/mnt/tomcat/genie-jobs

# The timeout after which an S3 copy will be aborted
netflix.genie.server.hadoop.s3cp.timeout=1800
# Other properties required to make S3 copies work
netflix.genie.server.hadoop.s3cp.opts=-Dfs.s3.impl=org.apache.hadoop.fs.s3native.NativeS3FileSystem \
	-Dfs.file.impl=org.apache.hadoop.fs.RawLocalFileSystem \
	-Dfs.s3.awsAccessKeyId=KEY \
	-Dfs.s3.awsSecretAccessKey=SECRET \
	-Dfs.s3n.awsAccessKeyId=KEY \
	-Dfs.s3n.awsSecretAccessKey=SECRET

# if set, archive logs to this location
# netflix.genie.server.s3.archive.location=s3://SOME_S3_PREFIX

## Configuration for janitor thread, which cleans up zombie jobs
# sleep time between iterations
netflix.genie.server.janitor.sleep.ms=300000
# the time delta older than which unupdated jobs are marked as zombies
netflix.genie.server.janitor.zombie.delta.ms=1800000

## Configuration for the metrics thread, which updates servo metrics
# metrics will be delayed at most by this time
netflix.genie.server.metrics.sleep.ms=30000

## Properties for job throttling/forwarding
# max running jobs on this instance, after which 503s are thrown
netflix.genie.server.max.running.jobs=30
# number of running jobs on instance, after which to start forwarding to other instances
# to disable auto-forwarding of jobs, set this to higher than netflix.genie.server.max.running.jobs
netflix.genie.server.forward.jobs.threshold=20
# find an idle instance with fewer running jobs than current, by this delta
# e.g. if netflix.genie.server.forward.jobs.threshold=20, forward jobs to an instance
# with number of running jobs < (20-netflix.genie.server.idle.host.threshold.delta)
netflix.genie.server.idle.host.threshold.delta=5
# max running jobs on instance that jobs can be forwarded to
netflix.genie.server.max.idle.host.threshold=27

# if uncommented, the job will be killed if the size of its stdout is greater than the limit
# netflix.genie.job.max.stdout.size=8589934592

# Enable Lipstick (https://github.com/Netflix/lipstick) integration
# setting this to true simply passes along the genie job ID to Lipstick
netflix.genie.server.lipstick.enable=true
# property name to set if lipstick integration is enabled
netflix.genie.server.lipstick.uuid.prop.name=lipstick.uuid.prop.name

