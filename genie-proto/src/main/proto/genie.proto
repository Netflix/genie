syntax = "proto3";

package com.netflix.genie.proto;

import "google/protobuf/timestamp.proto";

option java_multiple_files = true;
option java_package = "com.netflix.genie.proto";
option java_outer_classname = "GenieProto";

// The Ping service definition.
service PingService {

    // Sends a greeting
    rpc ping (PingRequest) returns (PongResponse) {
    }
}

// The Ping request with client metadata.
message PingRequest {
    string request_id = 1;
    string source_name = 2;
    google.protobuf.Timestamp timestamp = 3;
    map<string, string> client_metadata = 4;
}

// The server response with server metadata.
message PongResponse {
    string request_id = 1;
    google.protobuf.Timestamp timestamp = 2;
    map<string, string> server_metadata = 3;
}

//
service AgentRegistrationService {
    rpc registerAgent (AgentRegistrationRequest) returns (AgentRegistrationResponse);
}

message AgentRegistrationRequest {
    string agent_version = 1;
    string agent_hostname = 2;
    string agent_pid = 3;
}

message AgentRegistrationResponse {
    string server_hostname = 1;
    string agent_id = 2;
    bool agent_accepted = 3;
    string server_message = 4;
}

// Job Service
service JobService {
    rpc reserveJobId (ReserveJobIdRequest) returns (ReserveJobIdResponse);
    rpc resolveJobSpecification (ResolveJobSpecificationRequest) returns (JobSpecificationResponse);
    rpc getJobSpecification (GetJobSpecificationRequest) returns (JobSpecificationResponse);
}

message JobMetadata {
    string id = 1;
    string name = 2;
    string user = 3;
    string version = 4;
    string description = 5;
    repeated string tags = 6;
    string metadata = 7;
    string email = 8;
    string grouping = 9;
    string grouping_instance = 10;
    string setup_file = 11;
    repeated string configs = 12;
    repeated string dependencies = 13;
    repeated string command_args = 14;
}

message ReserveJobIdRequest {
    JobMetadata metadata = 1;
}

message ReserveJobIdError {
    string message = 1;
    string exception = 2;
}

message ReserveJobIdResponse {
    oneof response {
        string id = 1;
        ReserveJobIdError error = 2;
    }
}

message Criterion {
    repeated string tags = 1;
    string id = 2;
    string name = 3;
    string status = 4;
    string version = 5;
}

message ExecutionResourceCriteria {
    repeated Criterion cluster_criteria = 1;
    Criterion command_criterion = 2;
    repeated string application_ids = 3;
}

message ResolveJobSpecificationRequest {
    string id = 1;
    bool is_interactive = 2;
    string job_directory_location = 3;
    ExecutionResourceCriteria criteria = 4;
}

message GetJobSpecificationRequest {
    string id = 1;
}

message ExecutionResource {
    string id = 1;
    string setup_file = 2;
    repeated string configs = 3;
    repeated string dependences = 4;
}

message JobSpecification {
    repeated string command_args = 1;
    ExecutionResource job = 2;
    ExecutionResource cluster = 3;
    ExecutionResource command = 4;
    repeated ExecutionResource applications = 5;
    map<string, string> environment_variables = 6;
    bool is_interactive = 7;
    string job_directory_location = 8;
}

message JobSpecificationServiceError {
    enum Type {
        UNKNOWN = 0;
        NO_CLUSTER_FOUND = 1;
        NO_SPECIFICATION_FOUND = 2;
    }
    Type type = 1;
    string message = 2;
}

message JobSpecificationResponse {
    oneof response {
        JobSpecification specification = 1;
        JobSpecificationServiceError error = 2;
    }
}
