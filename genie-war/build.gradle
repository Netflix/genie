apply plugin: "war"

dependencies {
    /*******************************
     * Compile Dependencies
     *******************************/

    compile(project(":genie-web"))

    /*******************************
     * Provided Dependencies
     *******************************/

    compileOnly("org.springframework.boot:spring-boot-starter-tomcat")

    /*******************************
     * Optional Dependencies
     *******************************/

    /*******************************
     * Runtime Dependencies
     *******************************/

    /*******************************
     * Test Dependencies
     *******************************/

    testCompile(project(":genie-test"))
}

jar {
    manifest {
        attributes("Implementation-Version": version)
    }
}

def dockerDir = new File(project.buildDir, "/docker")

task dockerCreateInputDir(type: Copy, group: "Docker", description: "Stage all the necessary files docker image") {
    dependsOn tasks.war
    from tasks.war
    from new File(project.projectDir, "src/main/docker/Dockerfile")
    into dockerDir
}

task dockerBuildWarImage(type: Exec, group: "Docker", description: "Build docker image for Genie War on Tomcat") {
    dependsOn tasks.dockerCreateInputDir
    workingDir dockerDir

    def appName = tasks.war.baseName.toString()

    def commandArgs = new ArrayList<>()
    commandArgs.add("docker")
    commandArgs.add("build")
    commandArgs.add("--force-rm")
    commandArgs.add("--build-arg")
    commandArgs.add("WAR_NAME=${appName}")
    commandArgs.add("--build-arg")
    commandArgs.add("VERSION=${project.version}")
    for (String tag : this.getDockerTags(appName)) {
        commandArgs.add("-t")
        commandArgs.add(tag)
    }
    commandArgs.add(".")

    commandLine commandArgs
}

task dockerPush(group: "Docker", description: "Push the built docker war image to Docker Hub") {
    dependsOn parent.tasks.dockerLogin, tasks.dockerBuildWarImage
    onlyIf {
        System.env."CI"
    }
    doLast {
        def appName = tasks.war.baseName.toString()
        for (String tag : this.getDockerTags(appName)) {
            exec {
                commandLine "docker", "push", tag
            }
        }
    }
}
