import org.apache.tools.ant.filters.ReplaceTokens

license {
    exclude "*.yml"
    exclude "*.xml"
    exclude "*.txt"
    exclude "META-INF/spring.factories"
}

dependencies {

    /*******************************
     * Annotation Processors
     *******************************/

    annotationProcessor("org.springframework.boot:spring-boot-configuration-processor")

    /*******************************
     * Compile Dependencies
     *******************************/

    compile project(":genie-common")
    compile(project(":genie-common-internal"))
    compile project(":genie-proto")

    // Spring
    compile("org.springframework.boot:spring-boot-starter")
    compile("org.springframework.cloud:spring-cloud-starter-aws")
    compile("org.springframework.statemachine:spring-statemachine-core")

    // Misc
    compile("com.beust:jcommander")
    compile("com.amazonaws:aws-java-sdk-sts")
    compile("io.grpc:grpc-netty")
    compile("javax.el:javax.el-api")
    compile("org.apache.commons:commons-lang3")
    compile("org.glassfish:javax.el")
    compile("org.codehaus.janino:janino")

    /*******************************
     * Provided Dependencies
     *******************************/

    /*******************************
     * Runtime Dependencies
     *******************************/

    /*******************************
     * Test Dependencies
     *******************************/

    testCompile(project(":genie-test"))
    testCompile("io.grpc:grpc-testing")
    testCompile("org.springframework.statemachine:spring-statemachine-test")
}

def genieVersion = project.version.toString()

jar {
    manifest {
        attributes("Implementation-Version": genieVersion)
    }
}

processResources {
    filesMatching("**/*.txt") {
        filter ReplaceTokens, tokens: [
                "genie.version": genieVersion
        ]
    }
}
